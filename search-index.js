var searchIndex = {};
searchIndex["ngrams"] = {"doc":"Ngrams","items":[[3,"Ngrams","ngrams","Main data type, implements the logic on splitting and grouping n-grams",null,null],[8,"Ngram","","Iterator adaptor, allows you to call the method `.ngrams(n)` on your iterator, as long as the\n`Item` of the `Iterator` fits the trait bound",null,null],[10,"ngrams","","",0,null],[8,"Pad","","Implement this so `ngrams` knows how to pad the beginning and end of your input.",null,null],[10,"symbol","","The item returned from this method will be used to pad the beginning and end of each n-gram",1,{"inputs":[],"output":{"name":"self"}}],[11,"len","","Specifies how many characters of padding to add. Defaults to N - 1",1,{"inputs":[{"name":"usize"}],"output":{"name":"usize"}}],[11,"fmt","","",2,null],[11,"new","","The source for the `Ngrams` is expected to be pre-tokenized, this library\ndoes not make any decisions regarding how your input should be tokenized.",2,{"inputs":[{"name":"v"},{"name":"usize"}],"output":{"name":"ngrams"}}],[11,"pad","","Include padding at the beginning and end of the input. By default, this crate includes\nimplementations for some common data structures, that prepends and appends the &quot;WORD_SEP&quot;\nunicode character onto the input.",2,null],[11,"next","","",2,null],[11,"symbol","collections::string","",3,{"inputs":[],"output":{"name":"self"}}],[11,"symbol","collections::vec","",4,{"inputs":[],"output":{"name":"self"}}]],"paths":[[8,"Ngram"],[8,"Pad"],[3,"Ngrams"],[3,"String"],[3,"Vec"]]};
initSearch(searchIndex);
